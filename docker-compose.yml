version: '3'

services:
  postgresdev:
    image: postgres
    ports:
     - "5432:5432"
    environment:
     - POSTGRES_PASSWORD=password
     - POSTGRES_USER=postgres
     - POSTGRES_DB=pgdev
  postgresdevpost:
    image: postgres
    ports:
     - "5433:5433"
    environment:
     - POSTGRES_PASSWORD=password
     - POSTGRES_USER=postgres
     - POSTGRES_DB=pgdevposts
     - PGPORT=5433
  postgresdevprofile:
    image: postgres
    ports:
     - "5434:5434"
    environment:
     - POSTGRES_PASSWORD=password
     - POSTGRES_USER=postgres
     - POSTGRES_DB=pgdevprofiles
     - PGPORT=5434
  postgresdevcomment:
    image: postgres
    ports:
     - "5435:5435"
    environment:
     - POSTGRES_PASSWORD=password
     - POSTGRES_USER=postgres
     - POSTGRES_DB=pgdevcomments
     - PGPORT=5435
  eureka:
    # image: maven:3.6.1-jdk-8
    build:
      context: ./eureka-server
      dockerfile: Dockerfiledev
    ports:
      - '8761:8761'
    working_dir: /app
    volumes:
      - ./eureka-server:/app
    command: 'mvn spring-boot:run'
    environment:
      - SPRING_PROFILES_ACTIVE=dockernet,global
  api-gateway:
    # image: maven:3.6.1-jdk-8
    build:
      context: ./api-gateway
      dockerfile: Dockerfiledev
    ports:
      - '8080:8080'
    working_dir: /app
    volumes:
      - ./api-gateway:/app
    depends_on:
      - eureka
    command: 'mvn spring-boot:run'
    environment:
      - SPRING_PROFILES_ACTIVE=dockernet,global
  auth-service:
    # image: maven:3.6.1-jdk-8
    build:
      context: ./auth-service
      dockerfile: Dockerfiledev
    ports:
      - '8081:8081'
    working_dir: /app
    volumes:
      - ./auth-service:/app
    depends_on:
      - postgresdev
      - eureka
    command: 'mvn spring-boot:run'
    environment:
      - SPRING_PROFILES_ACTIVE=dockernet,global
  post-service:
    # image: maven:3.6.1-jdk-8
    build:
      context: ./post-service
      dockerfile: Dockerfiledev
    ports:
      - '8082:8082'
    working_dir: /app
    volumes:
      - ./post-service:/app
    depends_on:
      - eureka
    command: 'mvn spring-boot:run'
    environment:
      - SPRING_PROFILES_ACTIVE=dockernet,global
  user-service:
    # image: maven:3.6.1-jdk-8
    build:
      context: ./user-service
      dockerfile: Dockerfiledev
    ports:
      - '8085:8085'
    working_dir: /app
    volumes:
      - ./user-service:/app
    depends_on:
      - eureka
    command: 'mvn spring-boot:run'
    environment:
      - SPRING_PROFILES_ACTIVE=dockernet,global
  comment-service:
    # image: maven:3.6.1-jdk-8
    build:
      context: ./comment-service
      dockerfile: Dockerfiledev
    ports:
      - '8083:8083'
    working_dir: /app
    volumes:
      - ./comment-service:/app
    depends_on:
      - eureka
    command: 'mvn spring-boot:run'
    environment:
      - SPRING_PROFILES_ACTIVE=dockernet,global
  profile-service:
    # image: maven:3.6.1-jdk-8
    build:
      context: ./profile-service
      dockerfile: Dockerfiledev
    ports:
      - '8084:8084'
    working_dir: /app
    volumes:
      - ./profile-service:/app
    depends_on:
      - eureka
    command: 'mvn spring-boot:run'
    environment:
      - SPRING_PROFILES_ACTIVE=dockernet,global
